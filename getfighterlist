# app/ program that pulls up info on mma fighters
# enter in name to pull up fighter, or weight class for list of fighters
# sorts by gender
# sorts by belt holders
# sorts by w/l ratio

# import bs4 as bs

import requests
import urllib.request
from pprint import pprint
from html_table_parser.parser import HTMLTableParser as ht
import pandas as pd


def url_get_contents(url):
    """ Opens a website and read its binary contents (HTTP Response Body) """
    
    req = urllib.request.Request(url=url)
    f = urllib.request.urlopen(req)
    return f.read()

def get_info():
    #after reading and decoding html, parses tables
    #checks for specific table (weight class)
    #returns row from table if valid input
    
    url = "https://en.wikipedia.org/wiki/List_of_current_UFC_fighters"
    xhtml = url_get_contents(url).decode('utf-8')
    p = ht()
    p.feed(xhtml)
    
    n = False
    x = False
    while n is False:
        weight_class = input('\nEnter weight class: ')
        if weight_class == 'Heavyweight':
            n = True
            while x is False:
                fighter = input('\nEnter fighter name: ')
                df = pd.DataFrame(p.tables[9])
                if fighter in df[1]:
                    result = df.loc[df[1] == fighter]
                    return result
                else:
                    print('\nEnter valid fighter name (First Last)')
        else:
            print("\nEnter valid weightclass")
    
#     elif weight_class == 'Light heavyweight':
#         fighter = input('Enter fighter name: ')
#         df = pd.DataFrame(p.tables[10])
#         result = df.loc[df[1] == fighter]
#         return result
#     
#     elif weight_class == 'Middleweight':
#         fighter = input('Enter fighter name: ')
#         df = pd.DataFrame(p.tables[11])
#         result = df.loc[df[1] == fighter]
#         return result
#     
#     elif weight_class == 'Welterweight':
#         fighter = input('Enter fighter name: ')
#         df = pd.DataFrame(p.tables[12])
#         result = df.loc[df[1] == fighter]
#         return result
#     
#     elif weight_class == 'Lightweight':
#         fighter = input('Enter fighter name: ')
#         df = pd.DataFrame(p.tables[13])
#         result = df.loc[df[1] == fighter]
#         return result
#     
#     elif weight_class == 'Featherweight':
#         fighter = input('Enter fighter name: ')
#         df = pd.DataFrame(p.tables[14])
#         result = df.loc[df[1] == fighter]
#         return result
#     
#     elif weight_class == 'Bantamweight':
#         fighter = input('Enter fighter name: ')
#         df = pd.DataFrame(p.tables[15])
#         result = df.loc[df[1] == fighter]
#         return result
#     
#     elif weight_class == 'Flyweight':
#         fighter = input('Enter fighter name: ')
#         df = pd.DataFrame(p.tables[16])
#         result = df.loc[df[1] == fighter]
#         return result
#     
#     elif weight_class == 'Female featherweight':
#         fighter = input('Enter fighter name: ')
#         df = pd.DataFrame(p.tables[17])
#         result = df.loc[df[1] == fighter]
#         return result
#     
#     elif weight_class == 'Female bantamweight':
#         fighter = input('Enter fighter name: ')
#         df = pd.DataFrame(p.tables[18])
#         result = df.loc[df[1] == fighter]
#         return result
#     
#     elif weight_class == 'Female flyweight':
#         fighter = input('Enter fighter name: ')
#         df = pd.DataFrame(p.tables[19])
#         result = df.loc[df[1] == fighter]
#         return result
#     
#     elif weight_class == 'Female strawweight':
#         fighter = input('Enter fighter name: ')
#         df = pd.DataFrame(p.tables[20])
#         result = df.loc[df[1] == fighter]
#         return result
#         
    


print(get_info())
